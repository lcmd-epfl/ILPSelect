#%%

import numpy as np
import pandas as pd
import plotly.express as px

#%%

qm9_cur = []
qm9_fps = []
drugs_cur = []
drugs_fps = []

qm7_model=[181.9416951201856,
    207.24672360904515,
    133.74838884174824,
    181.07019398733974,
    182.11248172074556,
    157.24106419458985,
    134.0423356089741,
    134.70330662839115,
    157.53455813601613,
    157.18616211600602
    ]
qm7_solve=[3253.986166000366,
    3572.1067118644714,
    2217.3891019821167,
    3927.4235241413116,
    5368.857313156128,
    3505.6404559612274,
    1781.5296730995178,
    1752.8349289894104,
    2940.3980090618134,
    2672.6647918224335]
qm9_model = [235.32907838374376, 233.77053913287818, 217.95534574985504, 217.44704530388117, 191.8491470757872, 187.01994038373232, 215.69206080026925, 123.74157211184502, 216.02271231263876, 241.00076004117727]
qm9_solve = [9431.198921203613, 12570.227752923965, 5606.991539001465, 4538.1282279491425, 5136.283241987228, 7704.31512093544, 3318.7404170036316, 1428.0935118198395, 7409.672619819641, 5910.0279421806335]
drugs_model = [720.0442480165511, 509.1977735981345, 754.348068960011, 921.197616243735, 653.9990676566958, 561.9240140467882, 251.89220152050257, 812.877481482923, 402.34396956674755, 506.91804875805974]
drugs_solve = [29343.729404211044, 11207.743177890778, 31504.80920815468,36000.8692009449,23113.136229991913,30898.535532951355,7781.996327877045,31262.063237905502,8998.177906036377,31867.095021009445]

df = pd.DataFrame(columns=["Database","Fragment", "Time_CUR", "Time_FPS", "Time_Model", "Time_Solve"])
# %%

for i in range(10):
    newdf= pd.DataFrame([{"Database":"qm7","Fragment":i, "Time_CUR":10, "Time_FPS":20, "Time_Model":qm7_model[i], "Time_Solve":qm7_solve[i]}])
    df = pd.concat([df, newdf])

# %%

for i in range(10):
    newdf= pd.DataFrame([{"Database":"qm9","Fragment":i, "Time_CUR":10, "Time_FPS":20, "Time_Model":qm9_model[i], "Time_Solve":qm9_solve[i]}])
    df = pd.concat([df, newdf])
# %%

for i in range(10):
    newdf= pd.DataFrame([{"Database":"drugs","Fragment":i, "Time_CUR":10, "Time_FPS":20, "Time_Model":drugs_model[i], "Time_Solve":drugs_solve[i]}])
    df = pd.concat([df, newdf])
# %%

px.box(df, x="Database", y="Time_Solve")
# %%
drugs_timings_per_N=[
    48.7118116869824,
    715.7558390090708,
    1284.0616510040127,
    2774.129922852968,
    8820.673114747973,
    13416.84421771497,
    27630.11871738895,
    16.950519778067246,
    263.00999086908996,
    798.1568058710545,
    1148.1354455840774,
    1843.402848618105,
    5199.780612709932,
    11591.883914975915,
    27.728305886033922,
    734.2013453720137,
    2113.993141722167,
    2851.9453931530006,
    6696.62358867703,
    13541.513493010076,
    24392.12394367112,
    633.6569378941786,
    1122.609728964977,
    3531.3758966161404,
    7778.879449089058,
    14350.856768853962,
    34961.58160290518,
    40002.2510204912,
    175.50874681095593,
    908.9878537009936,
    1294.0420700209215,
    1778.217059382936,
    2452.639402547851,
    9256.687983402982,
    22490.058532556053,
    48.95133871398866,
    549.1844728130382,
    1036.260711091105,
    3332.245122915134,
    5309.963821430923,
    10125.686860880116,
    32959.17705684714,
    11.755279752193019,
    157.290329718031,
    186.02610674407333,
    336.9560125421267,
    1034.5815744651482,
    2632.547567958012,
    7729.097324197181,
    29.02636722382158,
    265.11412635282613,
    1676.0687189979944,
    4676.433000447927,
    7564.707864030963,
    13569.7600017949,
    28434.075356934918,
    74.85937478905544,
    278.07747662393376,
    651.3082276810892,
    1759.6109891950618,
    2385.4204135830514,
    3195.888784794137,
    7881.0871854990255,
    81.21666954108514,
    333.65663931518793,
    731.3811572841369,
    1369.231229193043,
    4390.967226693174,
    7055.955551407067,
    13650.89443233516,
    ]

qm7_timings_per_N=[
    43.85628905601334,
    115.56832292303443,
    203.0648630450014,
    531.320611646981,
    1005.3999582950491,
    2412.624556352035,
    3263.4661601419793,
    14.412026094039902,
    79.55037887603976,
    185.33953671401832,
    361.19480196700897,
    984.7877076870063,
    2477.7266038110247,
    3454.8480342630064,
    58.80173314502463,
    70.28005140007008,
    138.0960107310675,
    345.07994045398664,
    645.003512018011,
    943.7722887840355,
    2171.097208064981,
    15.584569907048717,
    64.53759282303508,
    100.0428963189479,
    203.85766622796655,
    795.5090841340134,
    1387.6258432549657,
    3858.4909591929754,
    22.34537934011314,
    84.29892056505196,
    152.36049598106183,
    304.13465864001773,
    1063.089236592059,
    1862.5132515460718,
    5298.984252959024,
    77.70133663900197,
    166.02850493299775,
    244.2413913269993,
    571.9506288939156,
    794.0691055658972,
    1969.214063293999,
    3403.592193680932,
    9.16758700995706,
    44.65277734096162,
    73.85948858503252,
    239.79408141900785,
    351.8248060089536,
    636.2230162899941,
    1802.1411771649728,
    9.027631066041067,
    38.85704062099103,
    77.27661339298356,
    217.21196484996472,
    370.650595585932,
    637.9215211969567,
    1759.2479689420434,
    22.57246674108319,
    67.90846015908755,
    117.4439930790104,
    456.11032575101126,
    839.4087207930861,
    1264.823530820082,
    2936.7340183670167,
    39.24753774795681,
    67.6953812110005,
    148.25815238594078,
    271.8339824839495,
    577.8748533389298,
    1573.8988935119705,
    2624.4697955299634
    ]

qm9_timings_per_N=[
    15.427770629059523,
    255.5581172539387,
    280.09029576415196,
    538.6496191979386,
    1684.509366366081,
    4345.543532953132,
    8183.464759082999,
    88.59416570491157,
    124.56018559099175,
    221.24292049300857,
    384.0216503168922,
    2048.0905876648612,
    5321.571615180001,
    8550.757246638881,
    13.629362314939499,
    70.7431924098637,
    230.55435014795512,
    498.01014828681946,
    1173.650046324823,
    3505.9659348719288,
    4992.962891547009,
    45.71311068115756,
    135.17587250308134,
    203.66140770702623,
    828.8679437551182,
    1305.272337937029,
    1837.49714705511,
    4152.4435774020385,
    60.966382468119264,
    103.11316988291219,
    138.500168858096,
    176.26398318400607,
    645.2596994040068,
    2018.4070886450354,
    4530.731603333028,
    6.463011297164485,
    82.92962360219099,
    408.91281473310664,
    771.2950664809905,
    1040.5405852331314,
    2231.0231666231994,
    5149.240154298022,
    14.326846309006214,
    70.21113079506904,
    126.35329895489849,
    188.35495136398822,
    626.5232301410288,
    1044.9524194200058,
    4725.638801710913,
    16.814207219984382,
    25.767387451138347,
    35.319601243129,
    104.40076508908533,
    217.7087868140079,
    449.8219846719876,
    1527.7352208739612,
    43.498619860969484,
    168.40254930593073,
    898.283368530916,
    1392.6946817960124,
    2545.101870847866,
    3684.3906641949434,
    7780.301407668972,
    57.58442435692996,
    188.04326065303758,
    287.738055862952,
    775.7444579440635,
    1378.4415323128924,
    3034.579412786057,
    7423.234564150916,
]

timings_df = pd.DataFrame({})



qm7_timings_per_N = np.array(qm7_timings_per_N).reshape((10,7))
qm7_average_per_N = np.mean(qm7_timings_per_N, axis=0)

df=pd.DataFrame({"N":2**np.arange(4,11), "Time (h)":qm7_average_per_N/3600, "Targets":"QM7"})

timings_df=pd.concat([timings_df, df])

qm9_timings_per_N = np.array(qm9_timings_per_N).reshape((10,7))
qm9_average_per_N = np.mean(qm9_timings_per_N, axis=0)

df=pd.DataFrame({"N":2**np.arange(4,11), "Time (h)":qm9_average_per_N/3600, "Targets":"QM9"})

timings_df=pd.concat([timings_df, df])

drugs_timings_per_N = np.array(drugs_timings_per_N).reshape((10,7))
drugs_average_per_N = np.mean(drugs_timings_per_N, axis=0)

df=pd.DataFrame({"N":2**np.arange(4,11), "Time (h)":drugs_average_per_N/3600, "Targets":"Drug-like"})

timings_df=pd.concat([timings_df, df])

timings_df.N = timings_df.N.apply(lambda x: str(x)) # for x ticks

fig = px.bar(timings_df, x="N", y="Time (h)", color="Targets", barmode="group")

# Update layout to make the plot more aesthetically pleasing
fig.update_layout(
    yaxis=dict(
        ticks="outside",
        tickformat="f",
        gridcolor="lightgrey",
        title_text="Time (h)",
        title_standoff=25,
        title_font=dict(size=38, color="black", family="Arial, bold"),
    ),
    xaxis=dict(
        ticks="outside",
        gridcolor="lightgrey",
        title_text="<i>N</i>",
        title_font=dict(size=38, color="black", family="Arial, bold"),
    ),
    # title=f"Average learning curves on {len(targets)} targets",
    margin=dict(t=5, r=5),  # Adjust top margin to provide space for y-axis title
    plot_bgcolor="white",
    font=dict(size=30),  # ticks font size
    height=800,  # Adjust height to make the plot less wide
    width=600,  # Adjust width to make the plot taller
    legend=dict(
        x=1,
        y=1,
        traceorder="normal",
        font=dict(family="Arial, bold", size=30, color="black"),
        bgcolor="rgba(0,0,0,0)",
    ),
    showlegend=True,
)

fig.show()

# %%
